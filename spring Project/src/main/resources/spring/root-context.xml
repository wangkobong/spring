<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components
		(다른 웹 구성 요소에 표시되는 공유 자원을 정의하는 곳)
		서버 구동 -> web.xml을 먼저 읽음 -> web.xml 내용 중 가장 먼저 읽어지는 파일
		
		DB 연걸 정보(JDBC, Mybatis, Connection Pool),
		트랜잭션 처리 정보, 파일 업로드, AOP 관련 설정 등을 작성함.
	 -->
	 
	 <!-- 
	 	JDBCTemplate - Connection 객체 사용 
	 	DBCP -> DateSource 객체 사용(Connection객체를 한번 더 감싼 객체)
	 -->
		

	
	<!--  
		BasicDataSource dataSouce = new BasicDataSource();
	-->
	
	<!--  destroy-method="close" : 주어진 SqlSession 작업이 종료되면 close 하라는 의미  -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
		<!-- defaultAutoCommit : 커넥션풀을 이용해서 DB와 연결할 경우 기본적으로 auto commit 상태
								false로 지정할 경우 Spring Framework 또는 개발자에 의해서 트랜잭션을 제어하겠다 라는 의미
		-->
		<property name="defaultAutoCommit" value="false"/>
		
		<!-- 커넥션 풀 관련 설정 -->
		<property name="initialSize" value="10"/> <!-- 초기 커넥션 수, 기본 0 -->
	    <property name="maxTotal" value="500"/> <!-- 최대 커넥션 수, 기본 8 -->
	    <property name="maxIdle" value="100"/> <!-- 유휴 상태로 존재할 수 있는 커넥션 최대 수, 기본 8-->
	    <property name="minIdle" value="10"/> <!-- 유휴 상태로 존재할 수 있는 커넥션 최소 수, 기본 0 -->
	    <property name="maxWaitMillis" value="60000"/> <!-- 예외 발생 전 커넥션이 반환 될 떄 까지 대기하는 최대 시간(ms), 기본 -1(무기한) -->
	</bean>
	
	<!-- 트랜잭션 처리를 위한 트랜잭션 매니저 추가  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 트랜잭션 매니저 추가 후 xml namespace에 tx 추가 -->
	<tx:annotation-driven/>
	<!--  
		@Transactional 어노테이션을 인식하여 트랜잭션 처리를 진행해라.
		
		등록된 bean 중 @Transactional 어노테이션이 붙은 메소드를 찾아
		트랜잭션 처리를 할 수 있도록 트랜잭션 어드바이스를 적용
	-->
	
	<!-- 
      	SqlSession : sql구문을 DB에 전달, 실행하는 객체
      	SqlSessionFactory : SqlSession을 만드는 객체
      	sqlSessionFactoryBean : mybatis 설정 파일, Connection Pool 정보를 이용하여 SqlSessionFactory를 만드는 객체
      	sqlSessionTemplate : SqlSession 객체에 트랜잭션 처리 역할이 가능하도록 하는 객체
    -->
	
	<!-- Mybatis SqlSession Bean 등록 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- SqlSessionTemplate : 기본 SQL 실행 기능을 가진 SqlSession에 트랜잭션 처리 기능 부여 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean"/>	
	</bean>
	
	<!-- 파일 업로드 관련 Bean 등록 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize : 파일 업로드 요청 한 건당 허용되는 최대 바이트 크기, (-1은 무제한, 기본값) -->
		<property name="maxUploadSize" value="20971520"/> <!-- 20MB로 제한 -->
		
		<!-- maxInMemorySize : 디스크(저장장치)에 바로 저장하지 않고 메모리에 유지하도록 허용하는 바이트 크기-->
		<property name="maxInMemorySize" value="20971520"/>
		
	</bean>
	
</beans>






